import com.xxxxls.versionplugin.Android
import com.xxxxls.versionplugin.AndroidX
import com.xxxxls.versionplugin.BuildConfig

plugins {
    id "com.xxxxls.version.plugin"
    id 'com.android.library'
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id "com.github.dcendents.android-maven"
//    id "com.novoda.bintray-release"
}
group='com.github.xxxls'

android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName
        flavorDimensions BuildConfig.flavorDimensions

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        devTest.initWith(debug)
        devTest {
            matchingFallbacks = ['devTest', 'debug', 'release']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false
    }

    resourcePrefix "titlebar"
}

//publish {
//    userOrg = 'xxxls' //bintray注册的用户名/组织名
//    groupId = 'com.xxxls'////jcenter上的路径
//    artifactId = 'xsuper-titlebar' //项目名称
//    publishVersion = '1.0.0' //版本号
//    desc = '' //项目描述。可空。
//    website = '' //项目地址，一般填github地址。可空。
//}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testApi Android.junit
    androidTestApi Android.runner
    androidTestApi Android.espressoCore

    implementation AndroidX.appcompat
}

tasks.withType(Javadoc).all {
    enabled = false
}
// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// 制作文档(Javadoc)
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}