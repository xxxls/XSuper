apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion rootProject.ext.versions["compileSdkVersion"]
    buildToolsVersion rootProject.ext.versions["buildToolsVersion"]

    defaultConfig {
        applicationId "com.xxxxls.xsuper"
        minSdkVersion rootProject.ext.versions["minSdkVersion"]
        targetSdkVersion rootProject.ext.versions["targetSdkVersion"]
        versionCode rootProject.ext.versions["versionCode"]
        versionName rootProject.ext.versions["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        flavorDimensions rootProject.ext.versions["flavorDimensions"]
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        devTest.initWith(debug)
        devTest {
            matchingFallbacks = ['devTest', 'debug', 'release']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    //多渠道打包
    productFlavors {
        official {
            manifestPlaceholders.put("CHANNEL_VALUE", 0)
        }

        google {
            manifestPlaceholders.put("CHANNEL_VALUE", 1)
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    //签名配置
    signingConfigs {
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file('..\\xsuper-keystore.jks')
            keyAlias 'xsuper'
            keyPassword 'xsuper'
            storePassword 'xsuper'
        }
        debug {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file('..\\xsuper-keystore.jks')
            keyAlias 'xsuper'
            keyPassword 'xsuper'
            storePassword 'xsuper'
        }
    }

    //APK输出配置
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (variant.name.toLowerCase().contains("release")) {
                outputFileName = "short_video" +
                        "${defaultConfig.versionName}_" +
                        "${releaseTime()}.apk"
            }
        }
    }
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:multidex:1.0.3'

    implementation project(path: ':module_base')
    implementation project(path: ':module_user')
    implementation project(path: ':module_example')

    // ARouter路由
    annotationProcessor rootProject.ext.dependencies["arouter_compiler"]
    kapt rootProject.ext.dependencies["arouter_compiler"]
    //Hilt
    kapt rootProject.ext.dependencies["hilt-android-compiler"]
    kapt rootProject.ext.dependencies["hilt-compiler"]
    api rootProject.ext.dependencies["hilt"]
}


static def releaseTime() {
    return new Date().format("yyyy-MM-dd_HH-mm-ss", TimeZone.getTimeZone("GMT+8"))
}
