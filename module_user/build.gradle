import com.xxxxls.versionplugin.ARouter
import com.xxxxls.versionplugin.BuildConfig
import com.xxxxls.versionplugin.Hilt
import com.xxxxls.versionplugin.Room

plugins {
    id "com.xxxxls.version.plugin"
    id 'com.android.library'
    id "kotlin-android"
    id "kotlin-android-extensions"
    id "kotlin-kapt"
    id 'org.greenrobot.greendao'
    id 'dagger.hilt.android.plugin'
}

def isModule = module_user_enabled as Boolean
//if (isModule) {
//    apply plugin: 'com.android.library'
//} else {
//    apply plugin: 'com.android.application'
//}

android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        if (!isModule) {
            applicationId "com.xxxxls.example.user"
        }

        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName
        flavorDimensions BuildConfig.flavorDimensions

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    sourceSets {
        main {
            if (isModule) {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                //集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    exclude 'debug/**'
                }
            } else {
                manifest.srcFile 'src/main/application/AndroidManifest.xml'
            }
        }
    }

    resourcePrefix "user"
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':module_base')

    // ARouter路由
    kapt ARouter.compiler
    //room
    kapt Room.compiler
    //Hilt
    api Hilt.hilt
    kapt Hilt.androidCompiler
    kapt Hilt.compiler
}
